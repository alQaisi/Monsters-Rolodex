{"version":3,"sources":["Components/card/card.jsx","Components/card-list/card-list.jsx","Components/searchfield/searchfield.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","title","className","name","id","src","alt","email","CardList","monsters","map","SearchField","onInputChange","placeholder","type","onChange","App","testFunc","a","evt","setState","searchField","target","value","toLowerCase","console","log","state","onClick","fetch","then","response","json","data","this","filterdMonsters","filter","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,YAAK,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAQC,EAAV,EAAUA,MAAV,OACd,sBAAKC,UACDD,IAAQD,EAAQG,KAAhB,yBAAuCH,EAAQG,KAA/C,yCAAoFH,EAAQG,MAC5FC,GAAIJ,EAAQG,KAFhB,UAGI,qBAAKD,UAAU,UAAUG,IAAG,+BAA0BL,EAAQI,GAAlC,0BAA8DE,IAAKN,EAAQG,OACvG,6BAAKH,EAAQG,OACb,4BAAIH,EAAQO,aCILC,EATA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,SAASR,EAAS,EAATA,MACtB,OACI,qBAAKC,UAAU,YAAf,SAEMO,EAASC,KAAI,SAACV,GAAD,OAAW,cAAC,EAAD,CAAMC,MAAOA,EAAwBD,QAASA,GAArBA,EAAQI,UCAxDO,G,MALG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAChB,OACI,uBAAOV,UAAU,cAAcW,YAAY,kBAAkBC,KAAK,SAASC,SAAUH,MCqC9EI,G,wDAlCb,aAAc,IAAD,8BACX,gBAFFC,SAAS,SAAAC,GAAC,gBAAEA,EAAG,IACF,EAabN,cAAc,SAACO,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAIG,OAAOC,MAAMC,gBAAe,kBAAIC,QAAQC,IAAI,EAAKC,MAAMN,iBAd3E,EAgBbO,QAAQ,SAACT,GACPM,QAAQC,IAAIP,GACZA,EAAIG,OAAOlB,GAAG,EAAKgB,SAAS,CAACnB,MAAMkB,EAAIG,OAAOlB,KAAK,EAAKgB,SAAS,CAACnB,MAAM,sBAhBxE,EAAK0B,MAAM,CACTlB,SAAS,GACTY,YAAY,GACZpB,MAAM,oBALG,E,gEAQO,IAAD,OACjB4B,MAAM,6CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKb,SAAS,CAACX,SAASwB,S,+BASjC,IAAD,EAC6BC,KAAKP,MAAjClB,EADD,EACCA,SAASY,EADV,EACUA,YAAYpB,EADtB,EACsBA,MACtBkC,EAAgB1B,EAAS2B,QAAO,SAAApC,GAAO,OAAEA,EAAQG,KAAKqB,cAAca,SAAShB,MACnF,OACE,sBAAKnB,UAAU,MAAM0B,QAASM,KAAKN,QAAnC,UACE,6BAAK3B,IACL,cAAC,EAAD,CAAaW,cAAesB,KAAKtB,gBACjC,cAAC,EAAD,CAAUX,MAAOA,EAAOQ,SAAU0B,W,GA7BxBG,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1dbac1e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card=({monster,title})=>(\r\n    <div className={\r\n        title===monster.name?`card-container ${monster.name} currentCard`:`card-container ${monster.name}`}\r\n        id={monster.name}>\r\n        <img className=\"monster\" src={`https://robohash.org/${monster.id}?set=set2&size=220x220`} alt={monster.name}/>\r\n        <h2>{monster.name}</h2>\r\n        <p>{monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.jsx';\r\nconst CardList=({monsters,title})=>{\r\n    return(\r\n        <div className=\"card-list\">\r\n            {\r\n              monsters.map((monster)=><Card title={title} key={monster.id} monster={monster}/>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\nexport default CardList;\r\n\r\n","import React from 'react';\r\nimport './searchfield.style.css';\r\nconst SearchField=({onInputChange})=>{\r\n    return(\r\n        <input className=\"searchField\" placeholder=\"Search Monsters\" type=\"search\" onChange={onInputChange}/>\r\n    )\r\n};\r\nexport default SearchField;","import React,{Component} from 'react';\nimport CardList from './Components/card-list/card-list.jsx';\nimport SearchField from './Components/searchfield/searchfield.jsx';\nimport './App.css';\n\nclass App extends Component{\n  testFunc=a=>a**2;\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:'',\n      title:'Monsters Rolodex'\n    }\n  }\n  componentDidMount(){\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n        .then(response=>response.json())\n        .then(data=>this.setState({monsters:data}));\n  }\n  onInputChange=(evt)=>{\n    this.setState({searchField:evt.target.value.toLowerCase()},()=>console.log(this.state.searchField));\n  }\n  onClick=(evt)=>{\n    console.log(evt);\n    evt.target.id?this.setState({title:evt.target.id}):this.setState({title:'Monsters Rolodex'});\n  }\n  render(){\n    const {monsters,searchField,title}=this.state;\n    const filterdMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField));\n    return (\n      <div className=\"App\" onClick={this.onClick}>\n        <h1>{title}</h1>\n        <SearchField onInputChange={this.onInputChange}/>\n        <CardList title={title} monsters={filterdMonsters}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}